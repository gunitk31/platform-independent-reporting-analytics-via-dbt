version: 2
models:
  - name: dim_listings_cleansed
    description: Cleansed table containing AirBnB listings.
    columns:
      - name: listing_id
        description: Primary key for an AirBnB listing.
        tests:
          - unique
          - not_null
      - name: host_id
        description: The host's ID. References the host table.
        tests:
          - not_null
          - relationships:
              to: ref('dim_hosts_cleansed')
              field: host_id
      - name: room_type
        description: Type of room / apartment
        tests:
          - accepted_values:
              values:
                - Entire home/apt
                - Private room
                - Shared room
                - Hotel room
      - name: minimum_nights
        description: '{{ doc("dim_listing_cleansed__minimum_nights") }}'
        tests:
          - positive_value
  - name: dim_hosts_cleansed
    description: Cleansed table containing AirBnB hosts.
    columns:
      - name: host_id
        description: Primary key for an AirBnB hosts.
      - name: host_name
        description: Name of the AirBnB host.
      - name: is_superhost
        description: Binary attribute that defines whether the host is a superhost or not.
  - name: dim_listings_with_hosts
    columns:
      - name: price
        tests:
          - dbt_expectations.expect_column_quantile_values_to_be_between:
              quantile: 0.99
              min_value: 50
              max_value: 500
          - dbt_expectations.expect_column_max_to_be_between:
              max_value: 5000
              config:
                severity: warn
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: number
    tests:
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
          compare_model: source('airbnb', 'listings')
  - name: mart_full_moon_reviews
    description: The 'mart_full_moon_reviews' model is your go-to guide for all
      things lunar and review-related. It's like a werewolf's diary, tracking
      Airbnb reviews based on the phases of the moon. With columns like
      'REVIEWER_NAME', 'REVIEW_DATE', 'REVIEW_TEXT', 'REVIEW_SENTIMENT', and
      'IS_FULL_MOON', it's a one-stop shop for understanding if the full moon
      really does bring out the 'beast' in reviewers. So, whether you're a moon
      enthusiast, a sentiment analyst, or just someone who enjoys a good laugh,
      this model is sure to light up your data analysis like a full moon on a
      clear night.
    columns:
      - name: listing_id
        data_type: number
      - name: reviewer_name
        data_type: varchar
      - name: review_date
        data_type: timestamp_ntz
      - name: review_text
        data_type: varchar
      - name: review_sentiment
        description: The 'REVIEW_SENTIMENT' column represents the sentiment of the
          review text. It is a string value that can be either 'positive',
          'negative', or 'neutral'. This sentiment is derived from the
          'REVIEW_TEXT' column using a sentiment analysis algorithm.
        data_type: varchar
        tests:
          - accepted_values:
              values:
                - neutral
                - positive
                - negative
      - name: is_full_moon
        data_type: varchar
    tests:
          - dbt_utils.recency:
              datepart: day
              field: review_date
              interval: 365    
  - name: fct_reviews
    description: "The fct_reviews model is a transformation of the raw_reviews table
      from the AIRBNB schema. It contains reviews data for Airbnb listings. The
      model includes the following columns: listing_id, reviewer_name,
      review_date, review_text, and review_sentiment. The listing_id is a unique
      identifier for each listing. The reviewer_name is the name of the person
      who left the review. The review_date is the date when the review was left.
      The review_text is the actual text of the review. The review_sentiment is
      a sentiment analysis of the review text. The model filters out any rows
      where the review_text is null."
    columns:
      - name: listing_id
        data_type: number
        quote: true
      - name: reviewer_name
        data_type: varchar
        quote: true
      - name: review_date
        data_type: timestamp_ntz
        quote: true
      - name: review_text
        data_type: varchar
        quote: true
      - name: review_sentiment
        data_type: varchar
        quote: true
